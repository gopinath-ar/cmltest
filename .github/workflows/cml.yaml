on: [push]

name: self-hosted-example

jobs:
  simpleExample:
#   self-hosted ubuntu-latest
    runs-on: gpu
#    container: docker://ghcr.io/iterative/cml:latest
#    container: docker://ghcr.io/iterative/cml:0-dvc2-base1-gpu
    steps:
    - uses: actions/checkout@master
#    - uses: actions/setup-python@v4  # testing cml-gpu self hosting###
#    - uses: iterative/setup-cml@v1   # not required in container###
    - name: train model
      run: |
          pip install -r requirements.txt
          python train.py  # generate plot.png#
          cat metrics.txt >> README.md
          cp plot.png data/plot.png
          git add data/plot.png
          echo  '![](/data/plot.png)' >> README.md
          git config --global user.email "gopinath@test.com"
          git config --global user.name "gopinath"
          git add README.md
          git commit -m "updated readme"
          git push origin main
          # Create CML report
          # cat metrics.txt >> report.md
          # gpuinfo="$(nvidia-smi)"
          ## echo $gpuinfo >> report.md
          # echo '![](./plot.png)' >> report.md
          # echo "cml comment create --publish report.md --log debug" > report.md
          
          # source $HOME/bin/torchenv/bin/activate
          # python gpuinfo.py > report.md #
          
          # pip install --find-links /home/runner/cache --no-index tensorflow==2.12.0
          # python gpudocker.py > report.md
          # cml comment create --publish report.md
      env:
          REPO_TOKEN:  ${{ secrets.GITHUB_TOKEN }}
#     - name: Create commit comment
#       uses: peter-evans/commit-comment@v2
#       with: 
#         sha: ${{ github.sha }}
#         body: |
#             This is a multi-line test comment
#             - With GitHub **Markdown** :sparkles:
#             - Created by [commit-comment][1]

# name: CML
# on: [push]
# jobs:
#   launch-runner:
#     runs-on: ubuntu-latest
# #    container: docker://ghcr.io/iterative/cml:latest
#     steps:
# #      - uses: iterative/setup-cml@v1
#       - uses: actions/setup-python@v4
#       - uses: actions/checkout@v3
# # modified token
# #        with:
# #          ref: ${{ github.event.pull_request.head.sha }}
# #                    echo '![](./plot.png "Confusion Matrix")' >> report.md
# #                   cml comment create report.md
#   train-and-report:
#     needs: launch-runner
#     runs-on: [self-hosted, cml-gpu]
#     steps:
#       - uses: actions/checkout@v3
#       - name: train model
#         run: |
#           pip install -r requirements.txt
#           python train.py  # generate plot.png
#           # Create CML report
#           cat metrics.txt >> report.md
#           plotfile="$(ls -l plot.png)"
#           echo "cml version: $(cml --version)" >> report.md
#           echo "$plotfile" >> report.md
#           echo "$(pwd)" >> report.md
#           echo '![](./plot.png)' >> report.md
#           body="$(cat report.md)"
#           cml comment create --publish report.md
#         env:
#           REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#       - name: upload artifacts
#         uses: actions/upload-artifact@v3
#         with:
#           name: plot and report files
#           path: |
#             plot.png
#             report.md
#       - name: Create commit comment
#         uses: peter-evans/commit-comment@v2
#         with: 
#           sha: ${{ github.sha }}
#           body: |
#             This is a multi-line test comment
#             - With GitHub **Markdown** :sparkles:
#             - Created by [commit-comment][1]
#             ![confusion matrix](./plot.png)
#       # - name: Create comment
#       #   uses: peter-evans/create-or-update-comment@v3
#       #   with:
#       #     issue-number: 1
#       #     # body: |
#       #     #   This is a multi-line test comment, test issue #1
#       #     #   - With GitHub **Markdown** :sparkles:
#       #     #   - Created by [create-or-update-comment][1]

#       #     #   [1]: https://github.com/peter-evans/create-or-update-comment
#       #     reactions: '+1'
#       #     body-path: report.md
#         env:
#           REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
